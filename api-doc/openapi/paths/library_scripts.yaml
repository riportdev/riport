get:
  tags:
    - Library
  summary: Read or find scripts
  description: Reads all scripts or find some based on the input parameters
  operationId: LibraryScriptsGet
  parameters:
    - name: sort
      in: query
      description: >-
        Sort field to be used for values, the sorting direction is by default
        ASC.
         To change the direction add `-` to the sorting value e.g. `-id`. All fields are allowed.
         You can use as many sort parameters as you want.
      schema:
        type: string
    - name: filter[<FIELD>]
      in: query
      description: >-
        Filter to find scripts. It should be provided in the format as
        `filter[<FIELD>]=<VALUE>`,
         where `<FIELD>` is one of the fields and `<VALUE>` is the search value,
         e.g. `filter[created_by]=admin` will request only scripts created by admin. You can use as many filter parameters as you want. You can use wildcards `*`.
         If you want to filter by multiple values e.g. find entries either for name = script1 or script2 you can use following filters
         `filter[name]=script1,script2`.
         Wildcards `*` are supported in the filter `<value>`.
      schema:
        type: string
    - name: fields[<RESOURCE>]
      in: query
      description: >-
        Fields to be returned. It should be provided in the format as
        `fields[<RESOURCE>]=<FIELDS>`, where `<RESOURCE>` is `scripts` and
        `<FIELDS>` is a comma separated list of fields. Example:
        `fields[scripts]=id,name`. If no fields are specified, all will be
        returned.
      schema:
        type: string
    - name: page
      in: query
      description: >-
        Pagination options `page[limit]` and `page[offset]` can be used to get
        more than the first page of results. Default limit is 20 and maximum is
        100. The `count` property in meta shows the total number of results.
      schema:
        type: integer
  responses:
    '200':
      description: Successful Operation
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: ../components/schemas/Script.yaml
              meta:
                type: object
                properties:
                  count:
                    type: integer
    '400':
      description: unsupported sort field 'xyz'
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ErrorPayload.yaml
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ErrorPayload.yaml
    '500':
      description: Invalid Operation
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ErrorPayload.yaml
post:
  tags:
    - Library
  summary: Creates a new script
  operationId: LibraryScriptsPost
  description: |-
    Creates a new script.
     If another entry with the same name exists, an error will be returned.
  requestBody:
    description: value in the json format
    content:
      '*/*':
        schema:
          $ref: ../components/schemas/ScriptInput.yaml
    required: true
  responses:
    '201':
      description: Successful Create Operation
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: ../components/schemas/Script.yaml
    '400':
      description: Invalid request parameters
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ErrorPayload.yaml
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ErrorPayload.yaml
    '409':
      description: another script with the same name exists
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ErrorPayload.yaml
    '500':
      description: Invalid Operation
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ErrorPayload.yaml
  x-codegen-request-body-name: body
